version: '3.7'

services:
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - 55432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
   
  metabase:
    image: metabase/metabase
    container_name: metabase
    ports:
      - "3000:3000"
    volumes:
      - metabasedata:/metabase.db/
    #email:test@test.com / password: testtest1

  nifi:
    image: apache/nifi:1.15.3
    ports:
      - 8443:8443
    volumes:
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/nifi_data:/tmp/data/
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/driver/:/tmp/driver/
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/nifi_site.xml/core-site.xml:/opt/nifi/nifi-current/core-site.xml
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/nifi_site.xml/hdfs-site.xml:/opt/nifi/nifi-current/hdfs-site.xml
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi_state:/opt/nifi/nifi-current/state
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=nifi123admin
    container_name: nifi

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hdfs.env

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hdfs.env

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hdfs.env
  
  zoo1:
    image: zookeeper:3.4.9
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - zoo1:/data
      - zoo1log:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka1:/var/lib/kafka/data
      - kafka_stream:/usr
    depends_on:
      - zoo1

  spark-master:
    image: bde2020/spark-master:3.0.1-hadoop3.2
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    environment: 
      - PYSPARK_PYTHON=python3
    env_file:
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/spark/hadoop.env
    volumes: 
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/spark/spark-zadaci:/home/spark-zadaci
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/spark/spark-zadaci/driver:/home/driver
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/spark_stream:/home/stream_zadaci

  spark-worker1:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker1
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - 8081:8081
    env_file:
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/spark/hadoop.env

  cloudera:
    image: gethue/hue:20201111-135001
    hostname: hue
    container_name: hue
    dns: 8.8.8.8
    ports:
      - "8888:8888"
    volumes:
      - /home/djansr/Desktop/DataEngineeringObuka/DataPipelineProject/docker_api/hue/conf.dist:/usr/share/hue/desktop/conf
    depends_on: 
      - namenode
    #login: user/user

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:
  nifi_conf: {}
  nifi_database_repository: {}
  nifi_flowfile_repository: {}
  nifi_content_repository: {}
  nifi_provenance_repository: {}
  nifi_state: {}
  postgres-data: {}
  metabasedata: {}
  zoo1:
  zoo1log:
  kafka1:
  kafka_stream:

  

  